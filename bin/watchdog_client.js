// Generated by CoffeeScript 1.6.1
(function() {
  var config, config_file, file, fs, getSystemInfo, io, os, socket, toml,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require('fs');

  toml = require('tomljs');

  io = require('socket.io-client');

  os = require('os');

  config_file = 'watchdog.toml';

  if (process.argv[2]) {
    config_file = process.argv[2];
  }

  try {
    file = fs.readFileSync(config_file).toString();
    config = toml(file);
  } catch (error) {
    console.log('Error: Configuration file not found!');
    process.exit(-1);
  }

  getSystemInfo = function() {
    var sysinfo;
    sysinfo = {};
    sysinfo.status = 'online';
    if (__indexOf.call(config.expose, 'hostname') >= 0) {
      sysinfo.hostname = os.hostname();
    }
    if (__indexOf.call(config.expose, 'type') >= 0) {
      sysinfo.type = os.type();
    }
    if (__indexOf.call(config.expose, 'platform') >= 0) {
      sysinfo.platform = os.platform();
    }
    if (__indexOf.call(config.expose, 'arch') >= 0) {
      sysinfo.arch = os.arch();
    }
    if (__indexOf.call(config.expose, 'uptime') >= 0) {
      sysinfo.uptime = os.uptime();
    }
    if (__indexOf.call(config.expose, 'load') >= 0) {
      sysinfo.load = os.loadavg();
    }
    if (__indexOf.call(config.expose, 'memory') >= 0) {
      sysinfo.total_memory = os.totalmem();
      sysinfo.free_memory = os.freemem();
    }
    return sysinfo;
  };

  socket = io.connect('http://' + config.server);

  socket.on('connect', function() {
    return socket.emit('register', 'server', config.name, function(res) {
      if (res === 'ack') {
        return console.log('Registered on server.');
      }
    });
  });

  socket.on('info', function(callback) {
    return callback(getSystemInfo());
  });

  socket.on('disconnect', function() {});

  socket.on('error', function(error) {
    return console.log('ERROR: Could not connect to server: ' + error);
  });

}).call(this);
