// Generated by CoffeeScript 1.3.3
(function() {
  var config, file, fs, io, server, servers, toml, viewers,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  fs = require('fs');

  toml = require('tomljs');

  io = require('socket.io');

  servers = {};

  viewers = [];

  try {
    file = fs.readFileSync('config.toml').toString();
    config = toml(file);
  } catch (error) {
    console.log('Error: Configuration file not found!');
    process.exit(-1);
  }

  console.log('server stuff');

  server = io.listen(3333);

  server.on('connection', function(socket) {
    socket.on('register', function(type, name, callback) {
      if (type === 'server') {
        console.log("[register] " + type + ": " + name);
        servers[name] = socket;
        return callback('ack');
      } else if (type === 'viewer') {
        if (name !== config.key) {
          return socket.disconnect();
        } else {
          console.log("[register] " + type + " " + socket.id);
          viewers.push(socket.id);
          return callback('ack');
        }
      }
    });
    return socket.on('get_info', function(options, callback) {
      var _ref,
        _this = this;
      if (_ref = socket.id, __indexOf.call(viewers, _ref) >= 0) {
        server = options['server'];
        return servers[server].emit('info', function(data) {
          return callback(data);
        });
      } else {
        return callback({
          error: 'You need to register first!'
        });
      }
    });
  });

}).call(this);
